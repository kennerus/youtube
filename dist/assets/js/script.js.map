{"version":3,"sources":["Modal.js","ParseYoutubeVideo.js","script.js"],"names":["Modal","modalOpenSelector","modalCloseSelector","modalSelector","activeModalSelector","init","openButton","document","querySelector","closeButton","modal","addEventListener","classList","add","remove","ParseYoutubeVideo","initData","videoContainer","successElementType","successElementClass","successElementHtml","successElementAppendTo","customMethod","getElementById","link","videoId","indexOf","split","ampersandPosition","substring","elementType","className","innerHtml","appendTo","element","createElement","innerHTML","appendChild","el","player","YT","Player","height","width","events","getYoutubeId","apiURL","xhr","XMLHttpRequest","open","send","status","console","log","statusText","youtubeData","JSON","parse","responseText","onYouTubeIframeAPIReady","setTimeout","removeElement","addVideo","input","addVideoBtn","inputValue","value","addVideoOnPage"],"mappings":"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","file":"script.js","sourcesContent":["'use strict';\n\nclass Modal {\n  constructor(modalOpenSelector, modalCloseSelector, modalSelector, activeModalSelector) {\n    this.modalOpenSelector = modalOpenSelector;\n    this.modalCloseSelector = modalCloseSelector;\n    this.activeModalSelector = activeModalSelector;\n    this.modalSelector = modalSelector;\n\n    this.init();\n  }\n\n  init() {\n    const openButton = document.querySelector(this.modalOpenSelector);\n    const closeButton = document.querySelector(this.modalCloseSelector);\n    const modal = document.querySelector(this.modalSelector);\n\n    openButton.addEventListener('click', () => {\n      modal.classList.add(this.activeModalSelector);\n    });\n\n    closeButton.addEventListener('click', () => {\n      modal.classList.remove(this.activeModalSelector);\n    });\n  };\n}\n","'use strict';\n\nclass ParseYoutubeVideo {\n  constructor(initData) {\n    const init = initData || {};\n    this.initData = {\n      videoContainer: init.videoContainer || 'video',\n      successElementType: init.successElementType || 'span',\n      successElementClass: init.successElementClass || 'video_done',\n      successElementHtml: init.successElementHtml || 'Видео успешно добавлено',\n      successElementAppendTo: init.successElementAppendTo || '',\n      customMethod: init.customMethod || function() {\n\n      }\n    };\n\n    this.videoContainer = document.getElementById(this.initData.videoContainer);\n  }\n\n  /**\n   * get video id from youtube link\n   *\n   * @param link\n   * @returns {string}\n   */\n  getYoutubeId(link) {\n    let videoId;\n    if (link.indexOf('.be/') !== -1) {\n      videoId = link.split('https://youtu.be/')[1];\n      return videoId;\n    } else {\n      videoId = link.split('v=')[1];\n      let ampersandPosition = videoId.indexOf('&');\n\n      if (ampersandPosition !== -1) {\n        videoId = videoId.substring(0, ampersandPosition);\n      }\n      return videoId;\n    }\n  }\n\n  /**\n   *\n   * create element and append it\n   *\n   * @param elementType\n   * @param className\n   * @param innerHtml\n   * @param appendTo\n   */\n  createElement(elementType, className, innerHtml, appendTo) {\n    const modal = document.querySelector(appendTo);\n    const element = document.createElement(elementType);\n    element.className = className;\n    element.innerHTML = innerHtml;\n    modal.appendChild(element);\n  }\n\n  /**\n   * remove element\n   *\n   * @param el\n   */\n  removeElement(el) {\n    const element = document.querySelector(`.${el}`) || document.querySelector(`#${el}`);\n    element.remove();\n  }\n\n  /**\n   * adding iframe to div\n   *\n   * @param videoId\n   */\n  onYouTubeIframeAPIReady(videoId) {\n    const player = new YT.Player(this.videoContainer, {\n      height: '360',\n      width: '640',\n      videoId: videoId,\n      events: {\n        'onReady': this.createElement(\n          this.initData.successElementType,\n          this.initData.successElementClass,\n          this.initData.successElementHtml,\n          this.initData.successElementAppendTo\n        ),\n      }\n    });\n  }\n\n  /**\n   * request to google api. gives all info about video\n   *\n   * @param link\n   */\n  httpRequest(link) {\n    const videoId = this.getYoutubeId(link);\n    const apiURL = 'https://www.googleapis.com/youtube/v3/videos?part=snippet&id=' + videoId + '&key=AIzaSyCHT9pNb7goNLOj_VHACnp4PgWtgzUpwPw';\n\n    // 1. Создаём новый объект XMLHttpRequest\n    let xhr = new XMLHttpRequest();\n\n    // 2. Конфигурируем его: GET-запрос на URL 'phones.json'\n    xhr.open('GET', apiURL, false);\n\n    // 3. Отсылаем запрос\n    xhr.send();\n\n    // 4. Если код ответа сервера не 200, то это ошибка\n    if (xhr.status != 200) {\n      // обработать ошибку\n      console.log(xhr.status + ': ' + xhr.statusText); // пример вывода: 404: Not Found\n    } else {\n      // вывести результат\n      const youtubeData = JSON.parse(xhr.responseText);\n      console.log(youtubeData);\n    }\n  }\n\n  /**\n   * add video to the page\n   *\n   * @param link\n   */\n  addVideoOnPage(link) {\n    const videoId = this.getYoutubeId(link);\n    this.onYouTubeIframeAPIReady(videoId);\n\n    setTimeout(() => {\n      this.removeElement(this.initData.successElementClass);\n    }, 3000)\n  }\n}\n","let addVideo = new ParseYoutubeVideo({\n  successElementAppendTo: '#root'\n});\nconst input = document.querySelector('.js_input');\nconst addVideoBtn = document.querySelector('.js_addVideo');\n\naddVideoBtn.addEventListener('click', () => {\n  const inputValue = input.value;\n  addVideo.addVideoOnPage(inputValue);\n});\n"]}