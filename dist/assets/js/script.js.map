{"version":3,"sources":["GetYoutubeVideo.js","script.js","modal/modal.js"],"names":["AddVideo","videoContainer","document","getElementById","link","videoId","indexOf","split","ampersandPosition","substring","elementType","className","innerHtml","appendTo","modal","querySelector","element","createElement","innerHTML","appendChild","remove","player","YT","Player","height","width","getYoutubeId","apiURL","xhr","XMLHttpRequest","postAjax","open","send","status","youtubeData","JSON","parse","responseText","console","log","onYouTubeIframeAPIReady","addVideo","input","oninput","httpRequest","value","openModalBtn","closeModal","addEventListener","classList","add"],"mappings":"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","file":"script.js","sourcesContent":["'use strict';\n\nclass AddVideo {\n  constructor(videoContainer) {\n    this.videoContainer = document.getElementById(videoContainer);\n  }\n\n  /**\n   * get video id from youtube link\n   *\n   * @param link\n   * @returns {string}\n   */\n  getYoutubeId(link) {\n    let videoId;\n    if (link.indexOf('.be/') !== -1) {\n      videoId = link.split('https://youtu.be/')[1];\n      return videoId;\n    } else {\n      videoId = link.split('v=')[1];\n      let ampersandPosition = videoId.indexOf('&');\n\n      if (ampersandPosition !== -1) {\n        videoId = videoId.substring(0, ampersandPosition);\n      }\n      return videoId;\n    }\n  }\n\n  /**\n   *\n   * create element and append it\n   *\n   * @param elementType\n   * @param className\n   * @param innerHtml\n   * @param appendTo\n   */\n  createElement(elementType, className, innerHtml, appendTo) {\n    const modal = document.querySelector(`.${appendTo}`);\n    const element = document.createElement(elementType);\n    element.className = className;\n    element.innerHTML = innerHtml;\n    modal.appendChild(element);\n  }\n\n  /**\n   * remove element\n   *\n   * @param className\n   */\n  removeElement(className) {\n    const element = document.querySelector(`.${className}`);\n    element.remove();\n  }\n\n  /**\n   * adding iframe to div\n   *\n   * @param videoId\n   */\n  onYouTubeIframeAPIReady(videoId) {\n    const player = new YT.Player(this.videoContainer, {\n      height: '360',\n      width: '640',\n      videoId: videoId\n    });\n  }\n\n  /**\n   * request to api. gives all info about video\n   *\n   * @param link\n   */\n  httpRequest(link) {\n    const videoId = this.getYoutubeId(link);\n    const apiURL = 'https://www.googleapis.com/youtube/v3/videos?part=snippet&id=' + videoId + '&key=AIzaSyCHT9pNb7goNLOj_VHACnp4PgWtgzUpwPw';\n\n    // 1. Создаём новый объект XMLHttpRequest\n    let xhr = new XMLHttpRequest();\n    let postAjax = new XMLHttpRequest();\n\n    // 2. Конфигурируем его: GET-запрос на URL 'phones.json'\n    xhr.open('GET', apiURL, false);\n\n    // 3. Отсылаем запрос\n    xhr.send();\n\n    // 4. Если код ответа сервера не 200, то это ошибка\n    if (xhr.status != 200) {\n      // обработать ошибку\n      //console.log(xhr.status + ': ' + xhr.statusText); // пример вывода: 404: Not Found\n      this.createElement('span', 'video_error', 'Произошла ошибка', 'modal__content');\n    } else {\n      // вывести результат\n      const youtubeData = JSON.parse(xhr.responseText);\n      console.log(youtubeData);\n\n      this.onYouTubeIframeAPIReady(videoId);\n\n      // callYoutube('player', video_id);\n      this.createElement('span', 'video_done', 'Видео успешно добавлено', 'modal__content');\n    }\n  }\n\n\n}\n","let addVideo = new AddVideo('video');\nconst input = document.querySelector('.js_input');\n\ninput.oninput = function () {\n  addVideo.httpRequest(input.value);\n};\n\n","const openModalBtn = document.querySelector('.js_openModal');\r\nconst closeModal = document.querySelector('.js_closeModal');\r\nconst modal = document.querySelector('.js_modal');\r\n\r\nopenModalBtn.addEventListener('click', function () {\r\n  modal.classList.add('modal_opened');\r\n});\r\n\r\ncloseModal.addEventListener('click', function () {\r\n  modal.classList.remove('modal_opened');\r\n});\r\n"]}